===========================
Progressive web application
===========================

.. 
   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
   !! This file is generated by oca-gen-addon-readme !!
   !! changes will be overwritten.                   !!
   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
   !! source digest: sha256:bfa97f581fe285df50f551611656872d4175862d717d2a02d47cbe47bc526555
   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

.. |badge1| image:: https://img.shields.io/badge/maturity-Beta-yellow.png
    :target: https://odoo-community.org/page/development-status
    :alt: Beta
.. |badge2| image:: https://img.shields.io/badge/licence-LGPL--3-blue.png
    :target: http://www.gnu.org/licenses/lgpl-3.0-standalone.html
    :alt: License: LGPL-3
.. |badge3| image:: https://img.shields.io/badge/github-OCA%2Fweb-lightgray.png?logo=github
    :target: https://github.com/OCA/web/tree/15.0/web_pwa_oca
    :alt: OCA/web
.. |badge4| image:: https://img.shields.io/badge/weblate-Translate%20me-F47D42.png
    :target: https://translation.odoo-community.org/projects/web-15-0/web-15-0-web_pwa_oca
    :alt: Translate me on Weblate
.. |badge5| image:: https://img.shields.io/badge/runboat-Try%20me-875A7B.png
    :target: https://runboat.odoo-community.org/builds?repo=OCA/web&target_branch=15.0
    :alt: Try me on Runboat

|badge1| |badge2| |badge3| |badge4| |badge5|

Make Odoo an installable Progressive Web Application.

Progressive Web Apps provide an installable, app-like experience on desktop and mobile that are built and delivered directly via the web.
They're web apps that are fast and reliable. And most importantly, they're web apps that work in any browser.
If you're building a web app today, you're already on the path towards building a Progressive Web App.


+ Developers Info.

The service worker is contructed using 'Odoo Class' to have the same class inheritance behaviour that in the 'user pages'. Be noticed
that 'Odoo Bootstrap' is not supported so, you can't use 'require' here.

All service worker content can be found in 'static/src/js/worker'. The management between 'user pages' and service worker is done in
'pwa_manager.js'.

The purpose of this module is give a base to make PWA applications.

**Table of contents**

.. contents::
   :local:

Installation
============

After having installed this module, browsing your odoo on mobile you will be able to install it as a PWA.

It is strongly recommended to use this module with a responsive layout, like the one provided by web_responsive.

This module is intended to be used by Odoo back-end users (employees).

When a Progressive Web App is installed, it looks and behaves like all of the other installed apps.
It launches from the same place that other apps launch. It runs in an app without an address bar or other browser UI.
And like all other installed apps, it's a top level app in the task switcher.

In Chrome, a Progressive Web App can either be installed through the three-dot context menu.

In case you previously installed `web_pwa`, run the following steps with `odoo shell`, after having installed `openupgradelib`:


>>> from openupgradelib import openupgrade
>>> openupgrade.update_module_names(env.cr, [('web_pwa', 'web_pwa_oca')], merge_modules=False)
>>> env.cr.commit()

Configuration
=============

This module allows you to set the following parameters under settings to customize the appearance of the application

* PWA Name (defaults to "Odoo PWA")
* PWA Short Name (defaults to "Odoo PWA")
* PWA Icon (**SVG**) (defaults to "/web_pwa_oca/static/img/icons/odoo-logo.svg")

To configure your PWA:

#. Go to **Settings > General Settings > Progressive Web App**.
#. Set the parameters (*Note:* Icon **must be a SVG file**)
#. **Save**

Usage
=====

To use your PWA:

#. Open the Odoo web app using a supported browser (See https://caniuse.com/?search=A2HS)
#. Open the browser options
#. Click on 'Add to Home screen' (or 'Install' in other browsers)

** Maybe you need refresh the page to load the service worker after using the option.

Known issues / Roadmap
======================

* Integrate `Notification API <https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/showNotification>`_
* Integrate `Web Share API <https://web.dev/web-share/>`_
* Create ``portal_pwa`` module, intended to be used by front-end users (customers, suppliers...)
* Current *John Resig's inheritance* implementation doesn't support ``async``
  functions because ``this._super`` can't be called inside a promise. So we
  need to use the following workaround:

  - Natural 'async/await' example (This breaks "_super" call):

    .. code-block:: javascript

        var MyClass = OdooClass.extend({
            myFunc: async function() {
                const mydata = await ...do await stuff...
                return mydata;
            }
        });

  - Same code with the workaround:

    .. code-block:: javascript

        var MyClass = OdooClass.extend({
            myFunc: function() {
                return new Promise(async (resolve, reject) => {
                    const mydata = await ...do await stuff...
                    return resolve(mydata);
                });
            }
        });

* Fix issue when trying to run in localhost with several databases. The browser
  doesn't send the cookie and web manifest returns 404.
* Firefox can't detect 'standalone' mode. See https://bugzilla.mozilla.org/show_bug.cgi?id=1285858
* Firefox disable service worker in private mode. See https://bugzilla.mozilla.org/show_bug.cgi?id=1601916

Bug Tracker
===========

Bugs are tracked on `GitHub Issues <https://github.com/OCA/web/issues>`_.
In case of trouble, please check there if your issue has already been reported.
If you spotted it first, help us to smash it by providing a detailed and welcomed
`feedback <https://github.com/OCA/web/issues/new?body=module:%20web_pwa_oca%0Aversion:%2015.0%0A%0A**Steps%20to%20reproduce**%0A-%20...%0A%0A**Current%20behavior**%0A%0A**Expected%20behavior**>`_.

Do not contact contributors directly about support or help with technical issues.

Credits
=======

Authors
~~~~~~~

* TAKOBI
* Tecnativa

Contributors
~~~~~~~~~~~~

* `TAKOBI <https://takobi.online>`_:

  * Lorenzo Battistini

* `Tecnativa <https://tecnativa.com>`_:

  * Alexandre D. Díaz
  * João Marques
  * Sergio Teruel

Maintainers
~~~~~~~~~~~

This module is maintained by the OCA.

.. image:: https://odoo-community.org/logo.png
   :alt: Odoo Community Association
   :target: https://odoo-community.org

OCA, or the Odoo Community Association, is a nonprofit organization whose
mission is to support the collaborative development of Odoo features and
promote its widespread use.

.. |maintainer-eLBati| image:: https://github.com/eLBati.png?size=40px
    :target: https://github.com/eLBati
    :alt: eLBati

Current `maintainer <https://odoo-community.org/page/maintainer-role>`__:

|maintainer-eLBati| 

This module is part of the `OCA/web <https://github.com/OCA/web/tree/15.0/web_pwa_oca>`_ project on GitHub.

You are welcome to contribute. To learn how please visit https://odoo-community.org/page/Contribute.
