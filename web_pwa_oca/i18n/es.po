# Translation of Odoo Server.
# This file contains the translation of the following modules:
#	* web_pwa_oca
#
msgid ""
msgstr ""
"Project-Id-Version: Odoo Server 12.0\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: 2020-09-16 14:00+0000\n"
"Last-Translator: claudiagn <claudia.gargallo@qubiq.es>\n"
"Language-Team: none\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: \n"
"Plural-Forms: nplurals=2; plural=n != 1;\n"
"X-Generator: Weblate 3.10\n"

#. module: web_pwa_oca
#: model_terms:ir.ui.view,arch_db:web_pwa_oca.manifest
msgid "\",\n"
"      \"sizes\": \"128x128\",\n"
"      \"type\": \"image/png\"\n"
"    }, {\n"
"      \"src\": \""
msgstr ""
"\",\n"
"      \"sizes\": \"128x128\",\n"
"      \"type\": \"image/png\"\n"
"    }, {\n"
"      \"src\": \""

#. module: web_pwa_oca
#: model_terms:ir.ui.view,arch_db:web_pwa_oca.manifest
msgid "\",\n"
"      \"sizes\": \"144x144\",\n"
"      \"type\": \"image/png\"\n"
"    }, {\n"
"      \"src\": \""
msgstr ""
"\",\n"
"      \"sizes\": \"144x144\",\n"
"      \"type\": \"image/png\"\n"
"    }, {\n"
"      \"src\": \""

#. module: web_pwa_oca
#: model_terms:ir.ui.view,arch_db:web_pwa_oca.manifest
msgid "\",\n"
"      \"sizes\": \"152x152\",\n"
"      \"type\": \"image/png\"\n"
"    }, {\n"
"      \"src\": \""
msgstr ""
"\",\n"
"      \"sizes\": \"152x152\",\n"
"      \"type\": \"image/png\"\n"
"    }, {\n"
"      \"src\": \""

#. module: web_pwa_oca
#: model_terms:ir.ui.view,arch_db:web_pwa_oca.manifest
msgid "\",\n"
"      \"sizes\": \"192x192\",\n"
"      \"type\": \"image/png\"\n"
"    }, {\n"
"      \"src\": \""
msgstr ""
"\",\n"
"      \"sizes\": \"192x192\",\n"
"      \"type\": \"image/png\"\n"
"    }, {\n"
"      \"src\": \""

#. module: web_pwa_oca
#: model_terms:ir.ui.view,arch_db:web_pwa_oca.manifest
msgid "\",\n"
"      \"sizes\": \"256x256\",\n"
"      \"type\": \"image/png\"\n"
"    }, {\n"
"      \"src\": \""
msgstr ""
"\",\n"
"      \"sizes\": \"256x256\",\n"
"      \"type\": \"image/png\"\n"
"    }, {\n"
"      \"src\": \""

#. module: web_pwa_oca
#: model_terms:ir.ui.view,arch_db:web_pwa_oca.manifest
msgid "\",\n"
"      \"sizes\": \"512x512\",\n"
"      \"type\": \"image/png\"\n"
"    }],\n"
"  \"start_url\": \"/web\",\n"
"  \"display\": \"standalone\",\n"
"  \"background_color\": \""
msgstr ""
"\",\n"
"      \"sizes\": \"512x512\",\n"
"      \"type\": \"image/png\"\n"
"    }],\n"
"  \"start_url\": \"/web\",\n"
"  \"display\": \"standalone\",\n"
"  \"background_color\": \""

#. module: web_pwa_oca
#: model_terms:ir.ui.view,arch_db:web_pwa_oca.manifest
msgid "\",\n"
"  \"icons\": [{\n"
"    \"src\": \""
msgstr ""
"\",\n"
"  \"icons\": [{\n"
"    \"src\": \""

#. module: web_pwa_oca
#: model_terms:ir.ui.view,arch_db:web_pwa_oca.manifest
msgid "\",\n"
"  \"short_name\": \""
msgstr ""
"\",\n"
"  \"short_name\": \""

#. module: web_pwa_oca
#: model_terms:ir.ui.view,arch_db:web_pwa_oca.manifest
msgid "\",\n"
"  \"theme_color\": \""
msgstr ""
"\",\n"
"  \"theme_color\": \""

#. module: web_pwa_oca
#: model_terms:ir.ui.view,arch_db:web_pwa_oca.service_worker
msgid "';\n"
"const FILES_TO_CACHE = ["
msgstr ""
"';\n"
"const FILES_TO_CACHE = ["

#. module: web_pwa_oca
#: model_terms:ir.ui.view,arch_db:web_pwa_oca.service_worker
msgid "'use strict';\n"
"const CACHE_NAME = '"
msgstr ""
"'use strict';\n"
"const CACHE_NAME = '"

#. module: web_pwa_oca
#. openerp-web
#: code:addons/web_pwa_oca/static/src/xml/pwa_install.xml:5
#, python-format
msgid "Install PWA"
msgstr "Instalar PWA"

#. module: web_pwa_oca
#: model_terms:ir.ui.view,arch_db:web_pwa_oca.service_worker
msgid "];\n"
"self.addEventListener('install', function (evt) {\n"
"  console.log('[ServiceWorker] Install');\n"
"  evt.waitUntil(\n"
"   caches.open(CACHE_NAME).then(function (cache) {\n"
"       console.log('[ServiceWorker] Pre-caching offline page');\n"
"       return cache.addAll(FILES_TO_CACHE);\n"
"   })\n"
"  );\n"
"  self.skipWaiting();\n"
"});\n"
"self.addEventListener('activate', function(evt) {\n"
"  console.log('[ServiceWorker] Activate');\n"
"   evt.waitUntil(\n"
"       caches.keys().then(function(keyList) {\n"
"           return Promise.all(keyList.map(function(key) {\n"
"               if (key !== CACHE_NAME) {\n"
"                   console.log('[ServiceWorker] Removing old cache', key);\n"
"                   return caches.delete(key);\n"
"               }\n"
"           }));\n"
"       })\n"
"   );\n"
"  self.clients.claim();\n"
"});\n"
"self.addEventListener('fetch', function(evt) {\n"
"  if (evt.request.cache === 'only-if-cached' &amp;&amp; evt.request.mode !== 'same-origin') {\n"
"    return;\n"
"  }\n"
"  console.log('[ServiceWorker] Fetch', evt.request.url);\n"
"   evt.respondWith(\n"
"       caches.open(CACHE_NAME).then(function(cache) {\n"
"           return cache.match(evt.request)\n"
"               .then(function(response) {\n"
"                   return response || fetch(evt.request);\n"
"                });\n"
"       })\n"
"   );\n"
"});"
msgstr ""
"];\n"
"self.addEventListener('install', function (evt) {\n"
"  console.log('[ServiceWorker] Install');\n"
"  evt.waitUntil(\n"
"   caches.open(CACHE_NAME).then(function (cache) {\n"
"       console.log('[ServiceWorker] Pre-caching offline page');\n"
"       return cache.addAll(FILES_TO_CACHE);\n"
"   })\n"
"  );\n"
"  self.skipWaiting();\n"
"});\n"
"self.addEventListener('activate', function(evt) {\n"
"  console.log('[ServiceWorker] Activate');\n"
"   evt.waitUntil(\n"
"       caches.keys().then(function(keyList) {\n"
"           return Promise.all(keyList.map(function(key) {\n"
"               if (key !== CACHE_NAME) {\n"
"                   console.log('[ServiceWorker] Removing old cache', key);\n"
"                   return caches.delete(key);\n"
"               }\n"
"           }));\n"
"       })\n"
"   );\n"
"  self.clients.claim();\n"
"});\n"
"self.addEventListener('fetch', function(evt) {\n"
"  if (evt.request.cache === 'only-if-cached' &amp;&amp; evt.request.mode !== "
"'same-origin') {\n"
"    return;\n"
"  }\n"
"  console.log('[ServiceWorker] Fetch', evt.request.url);\n"
"   evt.respondWith(\n"
"       caches.open(CACHE_NAME).then(function(cache) {\n"
"           return cache.match(evt.request)\n"
"               .then(function(response) {\n"
"                   return response || fetch(evt.request);\n"
"                });\n"
"       })\n"
"   );\n"
"});"

#. module: web_pwa_oca
#: model_terms:ir.ui.view,arch_db:web_pwa_oca.manifest
msgid "{\n"
"  \"name\": \""
msgstr ""
"{\n"
"  \"name\": \""
