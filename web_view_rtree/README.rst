==========
RTree View
==========

.. !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
   !! This file is generated by oca-gen-addon-readme !!
   !! changes will be overwritten.                   !!
   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

.. |badge1| image:: https://img.shields.io/badge/maturity-Alpha-red.png
    :target: https://odoo-community.org/page/development-status
    :alt: Alpha
.. |badge2| image:: https://img.shields.io/badge/licence-AGPL--3-blue.png
    :target: http://www.gnu.org/licenses/agpl-3.0-standalone.html
    :alt: License: AGPL-3
.. |badge3| image:: https://img.shields.io/badge/github-OCA%2Fweb-lightgray.png?logo=github
    :target: https://github.com/OCA/web/tree/16.0/web_view_rtree
    :alt: OCA/web
.. |badge4| image:: https://img.shields.io/badge/weblate-Translate%20me-F47D42.png
    :target: https://translation.odoo-community.org/projects/web-16-0/web-16-0-web_view_rtree
    :alt: Translate me on Weblate
.. |badge5| image:: https://img.shields.io/badge/runbot-Try%20me-875A7B.png
    :target: https://runbot.odoo-community.org/runbot/162/16.0
    :alt: Try me on Runbot

|badge1| |badge2| |badge3| |badge4| |badge5| 

This module defines a new rtree view type. RTree stands for “real tree” or
“recursive tree”. It allows to display recursive and hierarchical data
structures.

.. IMPORTANT::
   This is an alpha version, the data model and design can change at any time without warning.
   Only for development or testing purpose, do not use in production.
   `More details on development status <https://odoo-community.org/page/development-status>`_

**Table of contents**

.. contents::
   :local:

Usage
=====

To use the rtree view on a model, a view of that type must be defined for that
model. It is defined in the same way as a normal list (tree) view, but using
an ``<rtree>`` element instead of ``<tree>`` and with additional ``<parent>``
elements to define the hierarchy.

Each ``<parent>`` element defines a parent-child relationship to display. It
has the following attributes:

* ``parent``: the parent model of this relationship.
* ``child``: the child model of this relationship.
* ``field``: the field of the child model to access the parent.
* ``domain`` (optional): an optional domain to use when loading the children
  for this relationship.

The order of the ``<parent>`` elements controls the order of group types on
each level of the tree.

The root of the tree displays all groups and records that have no parent.

Here is an example to display projects with their tasks and sub-tasks
(recursively). At the root, it will display all projects (as groups) as well
as all tasks (as records) that have no parent and no project. Note that the
first relationship has a domain: this is to ensure that only tasks that have
no parent will be shown as children of their project.

.. code-block:: XML

    <record id="project_task_view_rtree" model="ir.ui.view">
        <field name="name">An rtree view for tasks</field>
        <field name="model">project.task</field>
        <field name="arch" type="xml">
            <rtree>
                <parent
                    parent="project.project"
                    child="project.task"
                    field="project_id"
                    domain="[('parent_id', '=', False)]"
                />
                <parent
                    parent="project.task"
                    child="project.task"
                    field="parent_id"
                />

                <field name="name" />
                <field name="milestone_id" />
                <!-- add more fields -->
            </rtree>
        </field>
    </record>

To make the view available, the ``rtree`` view mode must be added to the list
of view modes (``view_mode`` field) of the window action.

Known issues / Roadmap
======================

This module is in an alpha state. It is still being developed and should be
considered as experimental.

Does not work currently:

* Filtering (including defining where to start in the hierarchy): the search
  domain is ignored and the full hierarchy is always shown
* Pagination and limiting the number of results
* Remembering the state of open parents (to keep it in the current state when
  navigating back to the view)
* Sorting of columns
* Navigating between records accessed from the view
* Validation of the view definition

Known issues:

* The view template is currently a copy of the list view template with some
  tweaks. It should instead inherit from that view and apply changes to it.
* All models are assumed to have a ``name`` field (used to display groups).
  Instead, the real ``_rec_name`` model property should be used.

Bug Tracker
===========

Bugs are tracked on `GitHub Issues <https://github.com/OCA/web/issues>`_.
In case of trouble, please check there if your issue has already been reported.
If you spotted it first, help us smashing it by providing a detailed and welcomed
`feedback <https://github.com/OCA/web/issues/new?body=module:%20web_view_rtree%0Aversion:%2016.0%0A%0A**Steps%20to%20reproduce**%0A-%20...%0A%0A**Current%20behavior**%0A%0A**Expected%20behavior**>`_.

Do not contact contributors directly about support or help with technical issues.

Credits
=======

Authors
~~~~~~~

* Coop IT Easy SC

Contributors
~~~~~~~~~~~~

* `Coop IT Easy SC <https://coopiteasy.be>`_:

  * hugues de keyzer

Other credits
~~~~~~~~~~~~~

The development of this module has been funded by `iMio sc
<https://www.imio.be/>`_.

Maintainers
~~~~~~~~~~~

This module is maintained by the OCA.

.. image:: https://odoo-community.org/logo.png
   :alt: Odoo Community Association
   :target: https://odoo-community.org

OCA, or the Odoo Community Association, is a nonprofit organization whose
mission is to support the collaborative development of Odoo features and
promote its widespread use.

This module is part of the `OCA/web <https://github.com/OCA/web/tree/16.0/web_view_rtree>`_ project on GitHub.

You are welcome to contribute. To learn how please visit https://odoo-community.org/page/Contribute.
