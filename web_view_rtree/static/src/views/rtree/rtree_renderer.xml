<?xml version="1.0" encoding="UTF-8" ?>
<templates xml:space="preserve">
    <!--
        fixme: this is a copy of the ListRenderer templates with a few tweaks.
        instead, it should inherit from it and apply changes to it.
    -->

    <t t-name="web_view_rtree.RTreeRenderer.Rows" owl="1">
        <t t-foreach="list.records" t-as="record" t-key="record.id">
            <t t-set="group" t-value="record" />
            <t t-if="record.isRecord">
                <t t-call="{{ constructor.recordRowTemplate }}" />
            </t>
            <t t-else="">
                <t t-call="{{ constructor.groupRowTemplate }}" />
            </t>
            <t t-if="!group.isFolded">
                <t t-call="{{ constructor.rowsTemplate }}">
                    <t t-set="list" t-value="group.list" />
                </t>
                <tr t-if="!group.list.isGrouped and props.editable and canCreate">
                    <td t-if="hasSelectors" />
                    <td
                        t-att-colspan="hasSelector ? nbCols - 1 : nbCols"
                        class="o_group_field_row_add"
                    >
                        <a
                            href="#"
                            role="button"
                            t-on-click.stop.prevent="() => group.createRecord({}, props.editable === 'top')"
                            t-on-keydown.synthetic="(ev) => this.onCellKeydown(ev)"
                        >
                            Add a line
                        </a>
                    </td>
                </tr>
            </t>
        </t>
        <tr t-if="displayRowCreates">
            <td t-if="withHandleColumn" />
            <td
                t-att-colspan="withHandleColumn ? nbCols - 1 : nbCols"
                class="o_field_x2many_list_row_add"
                t-on-keydown.synthetic="(ev) => this.onCellKeydown(ev, null)"
            >
                <t t-foreach="creates" t-as="create" t-key="create_index">
                    <a
                        t-if="create.type === 'create'"
                        href="#"
                        role="button"
                        t-att-class="create_index !== 0 ? 'ml16' : ''"
                        t-att-tabindex="props.list.editedRecord ? '-1' : '0'"
                        t-on-click.stop.prevent="() => this.add({ context: create.context })"
                    >
                        <t t-esc="create.string" />
                    </a>
                    <ViewButton
                        t-if="create.type === 'button'"
                        className="`${create.className} ${create_index !== 0 ? 'ml16' : ''}`"
                        clickParams="create.clickParams"
                        icon="create.icon"
                        record="props.list"
                        string="create.string"
                        title="create.title"
                        tabindex="props.list.editedRecord ? '-1' : '0'"
                    />
                </t>
            </td>
        </tr>
        <tr t-foreach="getEmptyRowIds" t-as="emptyRowId" t-key="emptyRowId">
            <td t-att-colspan="nbCols">&#8203;</td>
        </tr>
    </t>

    <t t-name="web_view_rtree.RTreeRenderer.GroupRow" owl="1">
        <tr
            t-attf-class="{{group.count > 0 ? 'o_group_has_content' : ''}} o_group_header {{!group.isFolded ? 'o_group_open' : ''}} cursor-pointer"
            t-on-click="() => this.toggleGroup(group)"
        >
            <td t-if="hasSelectors" />
            <th
                t-on-keydown.synthetic="(ev) => this.onCellKeydown(ev, group)"
                tabindex="-1"
                t-attf-class="o_group_name fs-6 fw-bold {{!group.isFolded ? 'text-900' : 'text-700'}}"
                t-att-colspan="getGroupNameCellColSpan(group)"
            >
                <div class="d-flex">
                    <t t-if="group.hasChildren">
                        <span
                            t-attf-class="o_group_caret fa fa-fw {{group.isFolded ? 'fa-caret-right' : 'fa-caret-down' }} me-1"
                            t-attf-style="--o-list-group-level: {{getGroupLevel(group)}}"
                        />
                    </t>
                    <t t-else="">
                        <span
                            t-attf-class="o_group_caret fa fa-fw me-1"
                            t-attf-style="--o-list-group-level: {{getGroupLevel(group)}}"
                        />
                    </t>
                    <t t-esc="getGroupDisplayName(group)" /> (<t t-esc="group.count" />)
                    <div
                        t-if="(groupByButtons[group.groupByField.name] and !group.isFolded)"
                        class="o_group_buttons"
                    >
                        <t
                            t-foreach="groupByButtons[group.groupByField.name]"
                            t-as="button"
                            t-key="button.id"
                        >
                            <t
                                t-if="!evalModifier(button.modifiers.invisible, group.record)"
                            >
                                <t t-if="button.clickParams.type === 'edit'">
                                    <button
                                        t-att-title="button.title"
                                        class="btn"
                                        t-on-click="() => this.editGroupRecord(group)"
                                        tabindex="-1"
                                    >
                                        <i
                                            t-attf-class="fa fa-fw {{button.icon}} o_button_icon"
                                        />
                                    </button>
                                </t>
                                <t t-else="">
                                    <ViewButton
                                        className="button.className"
                                        clickParams="button.clickParams"
                                        icon="button.icon"
                                        record="group.record"
                                        string="button.string"
                                        title="button.title"
                                        tabindex="'-1'"
                                    />
                                </t>
                            </t>
                        </t>
                    </div>
                    <div t-if="showGroupPager(group)" class="ms-auto">
                        <Pager t-props="getGroupPagerProps(group)" />
                    </div>
                </div>
            </th>
            <td
                t-on-keydown.synthetic="(ev) => this.onCellKeydown(ev, group)"
                t-foreach="getAggregateColumns(group)"
                t-as="column"
                t-key="column.id"
                t-att-class="{'o_list_number': column.type === 'field'}"
            >
                <t
                    t-if="column.type === 'field'"
                    t-esc="formatAggregateValue(group, column)"
                />
            </td>
            <t t-set="groupPagerColspan" t-value="getGroupPagerCellColspan(group)" />
            <th
                t-on-keydown.synthetic="(ev) => this.onCellKeydown(ev, group)"
                t-if="groupPagerColspan > 0"
                t-att-colspan="groupPagerColspan"
            />
        </tr>
    </t>

    <t t-name="web_view_rtree.RTreeRenderer.RecordRow" owl="1">
        <tr
            class="o_data_row"
            t-att-class="getRowClass(record)"
            t-att-data-id="record.id"
            t-on-click.capture="(ev) => this.onClickCapture(record, ev)"
            t-on-mouseover.capture="(ev) => this.ignoreEventInSelectionMode(ev)"
            t-on-mouseout.capture="(ev) => this.ignoreEventInSelectionMode(ev)"
            t-on-mouseenter.capture="(ev) => this.ignoreEventInSelectionMode(ev)"
            t-on-touchstart="(ev) => this.onRowTouchStart(record, ev)"
            t-on-touchend="() => this.onRowTouchEnd(record)"
            t-on-touchmove="() => this.onRowTouchMove(record)"
            t-attf-class="{{group.count > 0 ? 'o_group_has_content' : ''}} o_group_header {{!group.isFolded ? 'o_group_open' : ''}}"
        >
            <td
                t-on-keydown.synthetic="(ev) => this.onCellKeydown(ev, group, record)"
                t-if="hasSelectors"
                class="o_list_record_selector"
                t-on-click.stop="() => this.toggleRecordSelection(record)"
                tabindex="-1"
            >
                <CheckBox
                    disabled="!!props.list.editedRecord or props.list.model.useSampleModel"
                    value="record.selected"
                    onChange.bind="() => this.toggleRecordSelection(record)"
                />
            </td>
            <t t-foreach="getColumns(record)" t-as="column" t-key="column.id">
                <t t-if="column.type === 'field'">
                    <td
                        t-on-keydown.synthetic="(ev) => this.onCellKeydown(ev, group, record)"
                        class="o_data_cell cursor-pointer"
                        t-att-class="getCellClass(column, record)"
                        t-att-name="column.name"
                        t-att-colspan="column.colspan"
                        t-att-data-tooltip="getCellTitle(column, record)"
                        data-tooltip-delay="1000"
                        t-on-click="(ev) => this.onCellClicked(record, column, ev)"
                        tabindex="-1"
                    >
                        <t t-if="!evalModifier(column.modifiers.invisible, record)">
                            <t t-if="isFirstColumn(column)">
                                <t t-if="group.hasChildren">
                                    <span
                                        t-attf-class="o_group_caret fa fa-fw {{group.isFolded ? 'fa-caret-right' : 'fa-caret-down' }} me-1"
                                        t-attf-style="--o-list-group-level: {{getGroupLevel(group)}}"
                                        t-on-click.stop="() => this.toggleGroup(group)"
                                    />
                                </t>
                                <t t-else="">
                                    <span
                                        t-attf-class="o_group_caret fa fa-fw me-1"
                                        t-attf-style="--o-list-group-level: {{getGroupLevel(group)}}"
                                    />
                                </t>
                            </t>
                            <t
                                t-if="canUseFormatter(column, record)"
                                t-out="getFormattedValue(column, record)"
                            />
                            <Field
                                t-else=""
                                name="column.name"
                                record="record"
                                type="column.widget"
                                class="getFieldClass(column)"
                                fieldInfo="props.archInfo.fieldNodes[column.name]"
                                setDirty="(isDirty) => this.setDirty(isDirty)"
                            />
                        </t>
                    </td>
                </t>
                <t t-if="column.type === 'button_group'">
                    <td
                        t-on-keydown.synthetic="(ev) => this.onCellKeydown(ev, group, record)"
                        class="o_data_cell"
                        t-att-class="getCellClass(column, record)"
                        t-on-click="(ev) => this.onButtonCellClicked(record, column, ev)"
                        tabindex="-1"
                    >
                        <t t-foreach="column.buttons" t-as="button" t-key="button.id">
                            <ViewButton
                                t-if="!evalModifier(button.modifiers.invisible, record)"
                                className="button.className"
                                clickParams="button.clickParams"
                                defaultRank="button.defaultRank"
                                disabled="record.isVirtual"
                                icon="button.icon"
                                record="record"
                                string="button.string"
                                title="button.title"
                                tabindex="props.list.editedRecord ? '-1' : '0'"
                            />
                        </t>
                    </td>
                </t>
                <t t-if="column.type === 'widget'">
                    <td class="o_data_cell" t-att-class="getCellClass(column, record)">
                        <Widget t-props="column.props" record="record" />
                    </td>
                </t>
            </t>

            <t t-set="useUnlink" t-value="'unlink' in activeActions" />
            <t
                t-set="hasX2ManyAction"
                t-value="isX2Many and (useUnlink ? activeActions.unlink : activeActions.delete)"
            />
            <t t-if="displayOptionalFields or hasX2ManyAction">
                <t t-if="hasX2ManyAction">
                    <td
                        class="o_list_record_remove text-center"
                        t-on-keydown.synthetic="(ev) => this.onCellKeydown(ev, group, record)"
                        t-on-click.stop="() => this.onDeleteRecord(record)"
                        tabindex="-1"
                    >
                        <button
                            class="fa"
                            t-att-class="{
                                'fa-trash-o': !useUnlink and activeActions.delete,
                                'fa-times': useUnlink and activeActions.unlink,
                            }"
                            name="delete"
                            aria-label="Delete row"
                            tabindex="-1"
                        />
                    </td>
                </t>
                <td t-else="" tabindex="-1" />
            </t>
        </tr>
    </t>

</templates>
