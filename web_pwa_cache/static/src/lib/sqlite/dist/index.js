const e=new WeakMap,t=(t,...o)=>{const{t:n,v:s}=((e,t)=>{const o=[e[0]],n=[];for(let s=0,l=0,c=0,{length:a}=t;l<a;l++)t[l]instanceof r?o[s]+=t[l].v+e[l+1]:(n[c++]=l,o[++s]=e[l+1]);return{t:o,v:n}})(t,o),l=e.get(t)||e.set(t,{}).get(t);return(l[n]||(l[n]=[n])).concat(s.map((e=>o[e])))};function r(e){this.v=e}const o=(e,r)=>(o,...s)=>new Promise(((c,a)=>{o.some(l)&&a(n(new Error("SQLITE_ERROR: SQL injection hazard")));const[i,...u]=t(o,...s);e[r](i.join("?"),u,((e,t)=>{e?a(e):c(t)}))})),n=e=>(e.code="SQLITE_ERROR",e),s=(e,...t)=>new r(function(e){for(var t=e[0],r=1,o=arguments.length;r<o;r++)t+=arguments[r]+e[r];return t}(e,...t)),l=e=>e.includes("?");function c(e){return{all:o(e,"all"),get:o(e,"get"),query:o(e,"run"),raw:s}}const{assign:a}=Object,i="function"==typeof importScripts,u=i?".":import.meta.url.replace(/\/[^/]*$/,""),p=e=>new Promise(((t,r)=>{const o=()=>{const e=self.module.exports;delete self.exports,self.module=void 0,t(e)};if(self.exports={},self.module={exports:exports},i)importScripts(e),o();else{const{head:t}=document;a(t.appendChild(document.createElement("script")),{onload(){t.removeChild(this),o()},onerror:r,src:e})}})),d=(e,t=1)=>new Promise(((r,o)=>{a(indexedDB.open(e,t),{onupgradeneeded({target:{result:e,transaction:t}}){e.objectStoreNames.contains("sqlite")||e.createObjectStore("sqlite").createIndex("buffer","buffer",{unique:!0}),a(t,{oncomplete(){r(e)}})},onsuccess({target:{result:e}}){r(e)},onerror:o})})),m=(e={})=>new Promise(((t,r)=>{const o=e.dist||u;p(o+"/sql-wasm.js").then((({default:n})=>{Promise.all([d(e.name||"sqlite-worker"),n({locateFile:e=>o+"/"+e})]).then((([o,{Database:n}])=>{const s=e=>o.transaction(["sqlite"],e).objectStore("sqlite");a(s("readonly").get("buffer"),{onsuccess(){let r=Promise.resolve();const{result:o}=this,l=new n(o||e.database||new Uint8Array(0)),i=()=>{r=r.then((()=>new Promise(((t,r)=>{const o=l.export();a(s("readwrite").put(o,"buffer").transaction,{oncomplete(){t(),e.update&&e.update(o)},onabort:r,onerror:r})}))))};o||i();const{all:u,get:p,query:d,raw:m}=c({all(e,t,r){try{const o=l.exec(e,t),n=[];o.forEach(f,n),r(null,n)}catch(e){r(e)}},get(e,t,r){try{const o=l.exec(e+" LIMIT 1",t),n=[];o.forEach(f,n),r(null,n.shift()||null)}catch(e){r(e)}},run(e,t,r){try{r(null,l.run(e,t))}catch(e){r(e)}}});let h=0;t({all:u,get:p,raw:m,query(t){return/\b(?:INSERT|DELETE|UPDATE)\b/i.test(t[0])&&(clearTimeout(h),h=setTimeout(i,e.timeout||250)),d.apply(this,arguments)}})},onerror:r})}),r)}))}));function f({columns:e,values:t}){for(let{length:r}=t,o=0;o<r;o++){const r=t[o],n={};for(let{length:t}=e,o=0;o<t;o++)n[e[o]]=r[o];this.push(n)}}const h=new Map;let w=0;function g(e={}){const{credentials:t}=e,r=e.dist||u,o=e.worker||r+"/worker.js",n=e=>(t,...r)=>s(e,{template:t,values:r}),s=(e,t)=>new Promise(((r,o)=>{const n=w++;h.set(n,{resolve:r,reject:o}),l.postMessage({id:n,action:e,options:t})})),l=a(new Worker(/^(?:\.|\/)/.test(o)?o:(e=>URL.createObjectURL(new Blob([`importScripts('${e}')`],{type:"text/javascript"})))(o),{credentials:t}),{onmessage({data:{id:e,result:t,error:r}}){const{resolve:o,reject:n}=h.get(e);h.delete(e),r?n(r):o(t)}});return s("init",a({dist:r,library:r+"/init.js"},e)).then((()=>({all:n("all"),get:n("get"),query:n("query")})))}export{g as SQLiteWorker,m as init};
