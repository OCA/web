const e=new WeakMap,t=(t,...n)=>{const{t:o,v:s}=((e,t)=>{const n=[e[0]],o=[];for(let s=0,l=0,c=0,{length:a}=t;l<a;l++)t[l]instanceof r?n[s]+=t[l].v+e[l+1]:(o[c++]=l,n[++s]=e[l+1]);return{t:n,v:o}})(t,n),l=e.get(t)||e.set(t,{}).get(t);return(l[o]||(l[o]=[o])).concat(s.map((e=>n[e])))};function r(e){this.v=e}const n=(e,r)=>(n,...s)=>new Promise(((c,a)=>{n.some(l)&&a(o(new Error("SQLITE_ERROR: SQL injection hazard")));const[i,...u]=t(n,...s);e[r](i.join("?"),u,((e,t)=>{e?a(e):c(t)}))})),o=e=>(e.code="SQLITE_ERROR",e),s=(e,...t)=>new r(function(e){for(var t=e[0],r=1,n=arguments.length;r<n;r++)t+=arguments[r]+e[r];return t}(e,...t)),l=e=>e.includes("?");function c(e){return{all:n(e,"all"),get:n(e,"get"),query:n(e,"run"),raw:s}}const{assign:a}=Object,i="function"==typeof importScripts,u=i?".":import.meta.url.replace(/\/[^/]*$/,""),p=e=>new Promise(((t,r)=>{const n=()=>{const e=self.module.exports;delete self.exports,self.module=void 0,t(e)};if(self.exports={},self.module={exports:exports},i)importScripts(e),n();else{const{head:t}=document;a(t.appendChild(document.createElement("script")),{onload(){t.removeChild(this),n()},onerror:r,src:e})}})),d=(e,t=1)=>new Promise(((r,n)=>{a(indexedDB.open(e,t),{onupgradeneeded({target:{result:e,transaction:t}}){e.objectStoreNames.contains("sqlite")||e.createObjectStore("sqlite").createIndex("buffer","buffer",{unique:!0}),a(t,{oncomplete(){r(e)}})},onsuccess({target:{result:e}}){r(e)},onerror:n})})),f=(e={})=>new Promise(((t,r)=>{const n=e.dist||u;p(n+"/sql-wasm.js").then((({default:o})=>{Promise.all([d(e.name||"sqlite-worker"),o({locateFile:e=>n+"/"+e})]).then((([n,{Database:o}])=>{const s=e=>n.transaction(["sqlite"],e).objectStore("sqlite");a(s("readonly").get("buffer"),{onsuccess(){let r=Promise.resolve();const{result:n}=this,l=new o(n||e.database||new Uint8Array(0));n||(r=r.then((()=>new Promise(((t,r)=>{const n=l.export();a(s("readwrite").put(n,"buffer").transaction,{oncomplete(){t(),e.update&&e.update(n)},onabort:r,onerror:r})})))));const{all:i,get:u,query:p,raw:d}=c({all(e,t,r){try{const n=l.exec(e,t),o=[];n.forEach(m,o),r(null,o)}catch(e){r(e)}},get(e,t,r){try{const n=l.exec(e+" LIMIT 1",t),o=[];n.forEach(m,o),r(null,o.shift()||null)}catch(e){r(e)}},run(e,t,r){try{r(null,l.run(e,t))}catch(e){r(e)}}});t({all:i,get:u,raw:d,query(e){return p.apply(this,arguments)}})},onerror:r})}),r)}))}));function m({columns:e,values:t}){for(let{length:r}=t,n=0;n<r;n++){const r=t[n],o={};for(let{length:t}=e,n=0;n<t;n++)o[e[n]]=r[n];this.push(o)}}const h=new Map;let w=0;function g(e={}){const{credentials:t}=e,r=e.dist||u,n=e.worker||r+"/worker.js",o=e=>(t,...r)=>s(e,{template:t,values:r}),s=(e,t)=>new Promise(((r,n)=>{const o=w++;h.set(o,{resolve:r,reject:n}),l.postMessage({id:o,action:e,options:t})})),l=a(new Worker(/^(?:\.|\/)/.test(n)?n:(e=>URL.createObjectURL(new Blob([`importScripts('${e}')`],{type:"text/javascript"})))(n),{credentials:t}),{onmessage({data:{id:e,result:t,error:r}}){const{resolve:n,reject:o}=h.get(e);h.delete(e),r?o(r):n(t)}});return s("init",a({dist:r,library:r+"/init.js"},e)).then((()=>({all:o("all"),get:o("get"),query:o("query")})))}export{g as SQLiteWorker,f as init};
